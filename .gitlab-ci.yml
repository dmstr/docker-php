stages:
  - php-build
  - php-test
  - nginx-build
  - nginx-test
  - php-release
  - nginx-release
  - cleanup

variables:
  PHP_IMAGE_NAME: dmstr/php-yii2

before_script:
  - export ISOLATION=buildpipeline${CI_PIPELINE_ID}
  - export COMPOSE_PROJECT_NAME=${ISOLATION}${CI_BUILD_NAME}
  - export PHP_BASE_IMAGE_VERSION=7.4
  - export PHP_IMAGE_VERSION=$(git describe --always --dirty --tags)
  - export STACK_PHP_IMAGE=${PHP_IMAGE_NAME}:${PHP_IMAGE_VERSION}
  - export REGISTRY_PHP_IMAGE=${PHP_IMAGE_NAME}:${CI_BUILD_REF_NAME}
  - export REGISTRY_PHP_IMAGE_LATEST=${PHP_IMAGE_NAME}:latest
  - echo "Build-environment information"
  # Docker >= 17.05 required for dynamic FROM references
  - docker version
  - docker-compose config
  - docker images ${PHP_IMAGE_NAME}

after_script:
  - export ISOLATION=buildpipeline${CI_PIPELINE_ID}
  - export COMPOSE_PROJECT_NAME=${ISOLATION}${CI_BUILD_NAME}
  - docker-compose down -v

build:php:
  stage: php-build
  script:
    - docker-compose build --pull php

test:php:
  stage: php-test
  script:
    - export PHP_SERVICE=php
    - sh test/prod.sh
    - sh test/dev.sh
    - sh test/debug.sh
    - docker-compose run --rm php php /test/requirements.php

test:php:allow-fail:
  stage: php-test
  script:
    - cd php
    - docker run --rm ${STACK_PHP_IMAGE} sh -c 'composer global update --dry-run; composer diagnose'
  allow_failure: true
  except:
    - tags

lint:php:
  stage: php-test
  script:
    - cd php
    - docker-compose run --rm php composer global show

release:php:latest:
  stage: php-release
  only:
    - latest
  script:
    - docker login --username ${REGISTRY_USER} --password ${REGISTRY_PASS} ${REGISTRY_HOST}
    - docker tag ${STACK_PHP_IMAGE} ${REGISTRY_PHP_IMAGE_LATEST}
    - docker push ${REGISTRY_PHP_IMAGE_LATEST}
    - docker logout ${REGISTRY_HOST}

release:php:tags:
  stage: php-release
  only:
    - tags
  script:
    - docker login --username ${REGISTRY_USER} --password ${REGISTRY_PASS} ${REGISTRY_HOST}
    - docker tag ${STACK_PHP_IMAGE} ${REGISTRY_PHP_IMAGE}
    - docker push ${REGISTRY_PHP_IMAGE}
    - docker logout ${REGISTRY_HOST}

build:php-nginx:
  stage: nginx-build
  script:
    - cd nginx
    # use locally built image
    - docker-compose build php-nginx

test:php-nginx:
  stage: nginx-test
  script:
    - docker-compose run --rm php-nginx nginx -v

release:nginx:latest:
  stage: nginx-release
  only:
    - latest
  script:
    - docker login --username ${REGISTRY_USER} --password ${REGISTRY_PASS} ${REGISTRY_HOST}
    - docker tag ${STACK_PHP_IMAGE}-nginx ${REGISTRY_PHP_IMAGE_LATEST}-nginx
    - docker push ${REGISTRY_PHP_IMAGE_LATEST}-nginx
    - docker logout ${REGISTRY_HOST}

release:nginx:tags:
  stage: nginx-release
  only:
    - tags
  script:
    - docker login --username ${REGISTRY_USER} --password ${REGISTRY_PASS} ${REGISTRY_HOST}
    - docker tag ${STACK_PHP_IMAGE}-nginx ${REGISTRY_PHP_IMAGE}-nginx
    - docker push ${REGISTRY_PHP_IMAGE}-nginx
    - docker logout ${REGISTRY_HOST}
